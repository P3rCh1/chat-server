services:
  gateway:
    build: ./gateway-service
    ports:
      - "8080:8080"
    environment:
      CONFIG_PATH: ${GATEWAY_CONFIG_PATH}
    depends_on:
      rooms:
        condition: service_healthy

  session:
    build: ./session-service
    ports:
      - "50051:50051"
    environment:
      CONFIG_PATH: ${SESSION_CONFIG_PATH}
      JWT_SECRET: ${JWT_SECRET}
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 50051 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 3
  user:
    build: ./user-service
    ports:
      - "50052:50052"
    environment:
      CONFIG_PATH: ${USER_CONFIG_PATH}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      session:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 50052 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 3

  rooms:
    build: ./rooms-service
    ports:
      - "50053:50053"
    environment:
      CONFIG_PATH: ${USER_CONFIG_PATH}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      user:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 50053 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "psql -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c 'SELECT 1'"]
      interval: 5s
      timeout: 5s
      retries: 3

  redis:
    image: redis:latest
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3

volumes:
  pg_data: